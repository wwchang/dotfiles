# /home/user/.procmailrc
SHELL = /bin/sh
PATH = ${HOME}/bin:/usr/local/bin:/usr/bin:/bin
MAILDIR = ${HOME}/Mails
DEFAULT = ${MAILDIR}/INBOX
# system mail mailbox.
ORGMAIL = $DEFAULT
PMDIR = ${HOME}/.mutt/procmail
LOGFILE = ${HOME}/.procmail.log
VERBOSE = "on"
# [ separated rc files ]
#INCLUDERC = $PMDIR/general.rc
#INCLUDERC = $PMDIR/mailinglist.rc
#INCLUDERC = $PMDIR/rss2email.rc
#INCLUDERC = $PMDIR/QQ.rc
#INCLUDERC = $PMDIR/syntax.rc

NOTIFY = ${HOME}/bin/notify.sh

# [ procmail Module Library ] {{{
# system procmail-lib package files in /usr/share/procmail-lib/
PMSRC = ${HOME}/.mutt/procmail/lib
# IMCLUDERC = $PMSRC/pm-mydefaults.rc
# }}}

# [ reference ] {{{
# http://www.ii.com/internet/robots/procmail/qs/
# http://pm-doc.sourceforge.net/doc/
# man procmail procmailrc procmailex procmailsc
# }}}

# [ syntax ] {{{
    # [flags] {{{
    # The order of the flags
        # The order of the flags does not matter in practice, but here is one
        # stylistic suggestion.
        # The idea here is that the most important flags are put to the left,
        # like giving priority 1 for aAeE, which affect the recipe immediately.
        # Priority 2 is given to flag f, which tells if a recipe filters
        # something. Also (h)eader and (b)ody should immediately follow f, this
        # is considered priority 3. In the middle there are other flags, and
        # last flag is c, which ends the recipe, or allows it to continue. In
        # addition according to [david]: "...I'm quite sure that putting
        # anything other than the opening colon and the number to the left of
        # AaEe will cause an error."
        #:0 aAeE HBD fhb wWir c: LOCKFILE
        # |    |   |   |    |
        # |    |   |   |    (c)ontinue or (c)lone flag last.
        # |    |   |   (w)ait and other flags
        # |    |   (f)ilter flag and to filter what: (h)ead or (b)ody
        # |    (H)eader and (B)ody match, possibly case sensitive (D)
        # |    Note: Procmail 3.22 bug
        # |   http://mailman.rwth-aachen.de/pipermail/procmail/2002-February/008355.html
        # The `process' flags first. (A)nd or (E)lse recipe
    # A - if you did the recipe at the start of the chain, try this one (A)lso.
    # a - if the last action at that nesting level was (a)ccomplished).
    # e - if the last action at that nesting level (e)rred.
    # E - (E)lse because the conditions down the chain so far have not matched.
    #       Or "try this recipe unless the last tried recipe matched".
    # a - AND
    #    A - try this recipe if the conditions succeeded on the most recent
    #        recipe at that nesting level that did not itself have an A nor an a.
    #    a - same as A, but moreover the action must have succeeded on the most
    #        recently tried recipe at that nesting level.
    # e - ELSE
    #    E -  try this recipe if the conditions have failed on the most recent
    #        recipe at that nesting level that did not have an E and on since
    #        then every recipe at that level that did have an E; essentially
    #        opposite of A.
    #    e - Almost like A, try this recipe if the conditions matched but the
    #        action failed on the most recently tried (not skipped) recipe at
    #        this nesting level. universe, e is the opposite of a. e only looks
    #        backwards past E recipes that were skipped because of their E. It
    #        doesn't care whether a previous recipe had an A or a flag.
    # c - copy (continue, clone) send a copy to the action.
    #       use 'c' flag to let procmail treat this recipe as a non-delivering recipe.
    # d -
    # b - body
    # h - header
    # w - wait
    # W - (implicit) NOTE: this is only turn on the recipe that opens a nested
    #      block.
    # f - filter
    # i - ignore error.
    # r - raw mode
    # }}}

    # The "\/" is a special procmail-only operand which puts a (possible) match
    # found by the rest of the expression into a variable named MATCH.

    # :0 [flags] [: [lock-file] ]
    # zero or more conditions
    # one action line

    # :0 [flags] [: [lock-file] ]
    # zero or more conditions
    # {
    #   :0
    #   zero or more conditions
    #   action line 1
    #
    #   :0
    #   zero or more conditions
    #   action line 2
    # }

    # lock file W: file$LOCKEXT
    # -------------------
    # :0 Wc: file$LOCKEXT
    # { ... }

    # variable reference => $FORMAIL
    # using absolute paths when calling a shell program
    # ---------------------
    # FORMAIL = /usr/local/bin/formail
    # GREP    = /bin/grep
    # DATE    = /bin/date
    # :0 fhw
    # | $FORMAIL -r

    # pipe (|)
    # ---------

    # backup all emails
    # -----------------
    # SPOOL = $HOME/Mails/spool
    # BACKUP_SPOOL = $SPOOL/backup
    # :0 c:
    # $BACKUP_SPOOL

    # AND & OR
    # -----------
    # * condition1
    # * condition2
    # -----------
    # * condition1 | condition2
    # * ? condition1 || condition2
# }}}

# ------------------------------------------------------------------

# [ lbdb fetch email address ] {{{
    :0hc
    | lbdb-fetchaddr
# }}}

# [ notify my emails ] {{{
    # execute a script without affect delivering.

    # get the subject into a variable
    # use procmail's MATCH variable (\/) feature.

    # * ^In-Reply-To: .*@stardiviner
    # * ^Message-ID: .*@stardiviner

    # emails which reply to my email thread.
    :0 c
    * ^References:.*@stardiviner
    * ^Subject:.*\/.*
    {
        # TODO covert some chaos encoding string into correct text.
        SUBJECT=$MATCH

        :0 ih
        * ^From: .*\/[^<]*
        | export DISPLAY=:0 ; $NOTIFY "Email: From $MATCH" "Subject: $SUBJECT" ; echo "$MATCH: $SUBJECT" >> ${HOME}/Templates/procmail-notify.log
    }

    # mail from myself (to a mailing list)
    :0 c
    * ^From: .*numbchild@gmail\.com
    * ^Subject:.*\/.*
    {
        SUBJECT=$MATCH

        :0 ih
        * ^To: .*\/[^<]*
        | export DISPLAY=:0 ; $NOTIFY "Email: Your Email to $MATCH send successed" "Subject: $SUBJECT" ; echo "$MATCH: $SUBJECT" >> ${HOME}/Templates/procmail-notify.log
    }

    # emails from GitHub comment notify
    :0 c
    * ^From: .*reply.*@reply\.github\.com
    * ^Subject:.*\/.*
    {
        SUBJECT=$MATCH

        :0 ih
        * ^From: .*\/[^<]*
        | export DISPLAY=:0 ; $NOTIFY "Email: From GitHub $MATCH" "Subject: $SUBJECT"
    }
# }}}

# [ convert ] {{{
    # [ convert HTML to text ] {{{
    :0
    * B ?? ()<HTML>
    * B ?? ()</HTML>
    {
        conversion = "lynx"     # or select this conditionally

        :0
        * conversion ?? lynx
        {
            # In new lynx version you can read from stdin. If
            # /dev/stdin doesn't exits try /dev/fd/0
            #
            # lynx -dump -force_HTML -nolist -restrictions=all \
            #   /dev/stdin
            #
            #  Without a global lock on this, you have a chance
            #  that two procmail instances will try to write to
            #  msg.dump

            file = "$HOME/tmp/msg.dump"

            LOCKFILE = $file$LOCKEXT

            :0 fbw
            | cat > $file && lynx -dump $file

            LOCKFILE
        }

        :0 E fbw
        | perl -0777 -pe 's/<[^>]*>//g'
    }
    # }}}

    # [ remove signature ] {{{
    # FIXME
    # :0 c
    # * ^In-Reply-To:\/.* | ^List-ID:\/.* | ^List-Post:\/.*
    # {
    #     :0 fbw
    #     | sed -e '/^-- /,/^$/ d'
    # }
    # }}}
# }}}

# From QQ {{{
    :0
    * ^To: .*348284894@qq\.com
    {
        :0
        * ^From: .*(fuhemeng|569040931)@(qq|gmail|yahoo)\.(com|cn)
        INBOX/
        :0
        QQ/
    }
    :0
    * ^To: .*450558573@qq\.com
    {
        # from mama send to INBOX
        :0
        * ^From: .*(fuhemeng|569040931)@(qq|gmail|yahoo)\.(com|cn)
        INBOX/
        :0
        QQ/
    }

    :0
    * ^From: .*10000@qq\.com
    * ^Subject: .* 垃圾邮件隔离提醒
    spam/
# }}}

# Programming Languages {{{
    # [ Guile ] {{{
    :0
    * ^List-Id: .*guile-user\.gnu\.org
    Guile/user/
    :0
    * ^List-Id: .*guile-devel\.gnu\.org
    Guile/devel/
    :0
    * ^List-Id: .*guile-sources\.gnu\.org
    Guile/sources/
    :0
    * ^List-Id: .*bug-guile\.gnu\.org
    Guile/bug/
    # }}}

    # [ Python ] {{{
    :0
    * ^List-Id: .*python-list\.python\.org
    Python/python/
    :0
    * ^List-Id: .*python-help\.python\.org
    Python/help/
    :0
    * ^List-Id: .*comp\.lang\.python\.googlegroups\.com
    Python/comp-lang/
    :0
    * ^List-Id: .*python-cn\.googlegroups\.com
    Python/python-cn/
    :0
    * ^List-Id: .*pythontw\.googlegroups\.com
    Python/python-tw/
    :0
    * ^List-Id: .*python-dev\.python\.org
    Python/dev/
    :0
    * ^List-Id: .*speed\.python\.org
    Python/help/

    # projects
    :0
    * ^List-Id: .*django-users\.googlegroups\.com
    Python/Django/
    :0
    * ^List-Id: .*webpy\.googlegroups\.com
    Python/webpy/
    :0
    * ^List-Id: .*sphinx-dev\.googlegroups\.com
    Python/sphinx-dev/
    # }}}

    # [ Go ] {{{
    :0
    * ^List-Id: .*golang-nuts\.googlegroups\.com
    Go/go-nuts/
    :0
    * ^List-ID: .*golang-china\.googlegroups\.com
    Go/go-china/
    :0
    * ^List-Id: .*golang-announce\.googlegroups\.com
    INBOX/
    :0
    * ^List-Id: .*golang-dev\.googlegroups\.com
    Go/go-dev/
    # }}}

    # [ Ruby ] {{{
    # Ruby-Talk
    :0
    * ^List-Id: .*ruby-talk.*\.ruby-lang\.org
    Ruby/talk
    # Ruby-Core
    :0
    * ^List-Id: .*ruby-core.*\.ruby-lang\.org
    Ruby/core
    # Ruby on Rails
    :0
    * ^To: .*rubyonrails-talk@googlegroups\.com
    Ruby/Rails/
    :0
    * ^To: .*rubyonrails-core@googlegroups\.com
    Ruby/Rails/
    # }}}

    # [ Dart ] {{{
    :0
    * ^List-Id: .*misc\.dartlang\.org
    Dart/misc/
    # }}}

    # [ Lisp ] {{{
    # :0
    # * ^List-Id: .*
    # Lisp/Lisp/
    :0
    * ^List-Id: .*comp\.lang\.lisp\.googlegroups\.com
    Lisp/comp-lang/
    :0
    * ^List-Id: .*lisp-cn\.googlegroups\.com
    Lisp/cn/
    # }}}

    # [ PHP ] {{{
    :0
    * ^List-Id: .*php-general\.lists\.php\.net
    PHP/general/
    # :0
    # * ^List-Id: .*php\.general\.googlegroups\.com
    # PHP/general/
    # :0
    # * ^List-Id: .*comp\.lang\.php\.googlegroups\.com
    # PHP/comp-lang/
    # :0
    # * ^List-Id: .*alt\.comp\.lang\.php\.googlegroups\.com
    # PHP/alt-comp-lang/
    # }}}

    # [ Perl ] {{{
    :0
    * ^List-Id: .*perl.*\.googlegroups\.com
    Perl/
    :0
    * ^List-Id: .*\.perl\.org
    Perl/
    # }}}
# }}}

# Web {{{
    :0
    * List-Id: .*firebug\.googlegroups\.com
    Web/firebug/
    :0
    * List-Id: .*jplayer\.googlegroups\.com
    Web/jplayer/
    :0
    * List-Id: .*help-whatwg\.org
    Web/whatwg/
    :0
    * To: .*whatwg@lists.whatwg\.org
    Web/whatwg/
# }}}

# Drupal {{{
    :0
    * List-Id: .*support\.drupal\.org
    Drupal/support/
    :0
    * List-Id: .*security-news\.drupal\.org
    Drupal/security/
# }}}

# Emacs {{{
    :0
    * ^List-Id: .*help-gnu-emacs\.gnu\.org
    Emacs/help
    :0
    * ^List-Id: .*emacs-devel\.gnu\.org
    Emacs/devel/
    :0
    * ^List-Id: .*info-gnu-emacs\.gnu\.org
    INBOX/
    :0
    * ^List-Id: .*implementations-list\.lists\.ourproject\.org
    Emacs/Evil/
# }}}

# Vim {{{
    :0
    * ^List-Id: .*vim\.vim\.org
    Vim/help/
    :0
    * ^List-Id: .*vim_use\.googlegroups\.com
    Vim/help/

    :0
    * ^List-Id: .*vim-dev\.vim\.org
    Vim/dev/
    :0
    * ^List-Id: .*vim_dev\.googlegroups\.com
    Vim/dev/
    :0
    * ^List-Id: .*vim-announce\.vim\.org
    INBOX/
    :0
    * ^List-Id: .*vim_announce\.googlegroups\.com
    INBOX/

    :0
    * ^List-Id: .*vimwiki\.googlegroups\.com
    Vim/vimwiki/
    :0
    * ^From: .*vimwiki@googlecode\.com
    Vim/vimwiki/
    #:0
    #* ^List-Id: .*vimorganizer\.googlegroups\.com
    #Vim/vimOrganizer
    :0
    * ^List-Id: .*eclim-user\.googlegroups\.com
    Vim/eclim/

    #:0
    #* ^List-Id: .*vim_use\.googlegroups\.com
    #{
        #:0 c
        #Vim/

        #:0:
        #* ^In-Reply-To: .*numbchild@gmail.com
        #* ^References:  .*numbchild@gmail.com
        #| /home/chris/bin/notify.sh "New_Mail" "Vim mailbox." ; echo "test procmail notify OK !" > /home/chris/test_procmail.txt
    #}
# }}}

# Apps: Awesome, FVWM?, Mutt, WeeChat, Ranger, Conky ... {{{
    :0
    * ^List-Id: .*git\.vger\.kernel\.org
    Git/help/
    :0
    * ^List-Id: .*git-users\.googlegroups\.com
    Git/users/
    :0
    * ^List-Id: .*gotgit\.googlegroups\.com
    Git/GotGit/

    :0
    * ^List-Id: .*zsh-users\.zsh\.org
    Zsh/users/
    :0
    * ^List-Id: .*zsh-workers\.zsh\.org
    Zsh/workers/
    :0
    * ^List-Id: .*zsh-announce\.zsh\.org
    INBOX/

    :0
    * ^List-Id: .*awesome\.naquadah\.org
    apps/Awesome/
    :0
    * ^List-Id: .*fvwm\.fvwm\.org
    apps/FVWM/
    :0
    * ^List-Post: .*@mutt\.org
    apps/Mutt/
    :0
    * ^List-Post: .*procmail-dev\.cuci\.nl
    INBOX/
    :0
    * List-Id: .*conky-users\.lists\.sourceforge\.net
    apps/Conky/
    :0
    * List-Id: .*weechat-support\.nongnu\.org
    apps/weechat/
    :0
    * List-Id: .*ranger-users\.nongnu\.org
    apps/ranger/
    :0
    * List-Id: .*mldonkey-users@nongnu\.org
    apps/MLDonkey/
    :0
    * To: .*mldonkey-users@nongnu\.org
    apps/MLDonkey/
    :0
    * ^List-Id: .*screen-users\.gnu\.org
    apps/screen/
    :0
    * ^List-Id: .*tmux-users\.lists\.sourceforge\.net
    apps/tmux/
    :0
    * ^List-Id: .*rxvt-unicode\.lists\.schmorp\.de
    apps/urxvt/
    :0
    * ^List-Id: .*pandoc-discuss\.googlegroups\.com
    apps/pandoc/
    # :0
    # * ^List-Id: .*canto-reader.*@codezen\.org
    # apps/Canto/
    :0
    * ^List-Id: .*gitit-discuss\.googlegroups\.com
    apps/gitit/
    :0
    * ^List-Id: .*mosh-users\.mit\.edu
    apps/mosh/
    :0
    * ^List-Id: .*ledger-cli\.googlegroups\.com
    apps/ledger/
    :0
    * ^List-Id: .*byzantium\.hacdc\.org
    apps/Byzantium/
    :0
    * ^List-Id: .*greasemonkey-dev\.googlegroups\.com
    apps/greasemonkey/
# }}}

# GNU {{{
    :0
    * ^List-Id: .*info-gnu\.gnu\.org
    GNU/gnu/
    :0
    * ^List-Id: .*parallel\.gnu\.org
    GNU/parallel/
    :0
    * ^List-Id: .*www-zh-cn-hackers\.gnu\.org
    GNU/zh-cn-hackers/
# }}}

# Arch Linux {{{
    :0
    * ^List-Id: .*arch-general\.archlinux\.org
    Arch/general/
    :0
    * ^List-Id: .*arch-announce\.archlinux\.org
    INBOX/
    :0
    * ^List-Id: .*arch-projects\.archlinux\.org
    Arch/projects/
    :0
    * ^List-Id: .*arch-events\.archlinux\.org
    Arch/events/
    :0
    * ^List-Id: .*arch-dev-public\.archlinux\.org
    Arch/dev-public/
    :0
    * ^List-Id: .*pacman-dev\.archlinux\.org
    Arch/pacman-dev/
    :0
    * ^List-Id: .*aur-general\.archlinux\.org
    Arch/aur-general/
    :0
    * ^List-Id: .*archlinux-cn\.googlegroups\.com
    Arch/archlinux-cn/
    :0
    * ^List-Id: .*arch-releng\.archlinux\.org
    Arch/releng/
# }}}

# Maemo {{{
    :0
    * ^List-Id: .*maemo-developers\.maemo\.org
    Maemo/devel/
    :0
    * ^List-Id: .*maemo-users\.maemo\.org
    Maemo/users/
    :0
    * ^Subject: .*"Development"\ update
    Maemo/update/Development/
    :0
    * ^Subject: .*"Nokia N900"\ update
    Maemo/update/N900/
# }}}

# Linux {{{
    :0
    * ^List-Id: .*linuxusersgroup\.googlegroups\.com
    Linux/

    # LUG ( Linux User Group ) {{{
    :0
    * ^List-ID: .*hzlug\.googlegroups\.com
    Linux/LUG/HangZhou/
    :0
    * ^List-ID: .*shlug\.googlegroups\.com
    Linux/LUG/ShangHai/
    :0
    * ^List-ID: .*xidian_linux\.googlegroups\.com
    Linux/LUG/XiDian/
    # }}}
# }}}

# security  {{{
    # :0
    # * ^List-ID: .*
    # Security/
# }}}

# Stack Exchange {{{
    # FIXME : procmail recipe can not use whitespace on destination path.
    # (location)

    :0
    * ^From: .*do-not-reply@stackexchange\.com
    {
        :0
        * ^Subject: .*Android\ Enthusiasts\ Weekly\ Newsletter\ -\ .*
        Stack\ Exchange/Android/
        :0
        * ^Subject: .*Ask\ Different\ Weekly\ Newsletter\ -\ .*
        Stack\ Exchange/Apple/
        :0
        * ^Subject: .*Ask\ Ubuntu\ Weekly\ Newsletter\ -\ .*
        Stack\ Exchange/Ask\ Ubuntu/
        :0
        * ^Subject: .*Bicycles\ Weekly\ Newsletter\ -\ .*
        Stack\ Exchange/Bicycles/
        :0
        * ^Subject: .*Code\ Golf\ Weekly\ Newsletter\ -\ .*
        Stack\ Exchange/Code\ Golf/
        :0
        * ^Subject: .*Code\ Review\ Weekly\ Newsletter\ -\ .*
        Stack\ Exchange/Code\ Review/
        :0
        * ^Subject: .*Cognitive\ Sciences\ Weekly\ Newsletter\ -\ .*
        Stack\ Exchange/Cognitive\ Sciences/
        :0
        * ^Subject: .*Computational\ Science\ Weekly\ Newsletter\ -\ .*
        Stack\ Exchange/Computational\ Science/
        :0
        * ^Subject: .*Computer\ Science\ Weekly\ Newsletter\ -\ .*
        Stack\ Exchange/Computer\ Science/
        :0
        * ^Subject: .*Cross\ Validated\ Weekly\ Newsletter\ -\ .*
        Stack\ Exchange/Cross\ Validated/
        :0
        * ^Subject: .*Database\ Administrators\ Weekly\ Newsletter\ -\ .*
        Stack\ Exchange/Database\ Administrators/
        :0
        * ^Subject: .*Drupal\ Answers\ Weekly\ Newsletter\ -\ .*
        Stack\ Exchange/Drupal/
        :0
        * ^Subject: .*English\ Language\ and\ Usage\ Weekly\ Newsletter\ -\ .*
        Stack\ Exchange/English/
        :0
        * ^Subject: .*GIS\ Weekly\ Newsletter\ -\ .*
        Stack\ Exchange/GIS/
        :0
        * ^Subject: .*Mathematica\ Weekly\ Newsletter\ -\ .*
        Stack\ Exchange/Mathematica/
        :0
        * ^Subject: .*Mathematics\ Weekly\ Newsletter\ -\ .*
        Stack\ Exchange/Mathematics/
        :0
        * ^Subject: .*Meta\ Stack\ Overflow\ Weekly\ Newsletter\ -\ .*
        Stack\ Exchange/Meta/
        :0
        * ^Subject: .*Poker\ Weekly\ Newsletter\ -\ .*
        Stack\ Exchange/Poker/
        :0
        * ^Subject: .*Programmers\ Weekly\ Newsletter\ -\ .*
        Stack\ Exchange/Programmers/
        :0
        * ^Subject: .*Server\ Fault\ Weekly\ Newsletter\ -\ .*
        Stack\ Exchange/Server\ Fault/
        :0
        * ^Subject: .*Stack\ Overflow\ Weekly\ Newsletter\ -\ .*
        Stack\ Exchange/Stack\ Overflow/
        :0
        * ^Subject: .*Super\ User\ Weekly\ Newsletter\ -\ .*
        Stack\ Exchange/Super\ User/
        :0
        * ^Subject: .*Theoretical\ Computer\ Science\ Weekly\ Newsletter\ -\ .*
        Stack\ Exchange/Theoretical\ Computer\ Science/
        :0
        * ^Subject: .*Travel\ Weekly\ Newsletter\ -\ .*
        Stack\ Exchange/Travel/
        :0
        * ^Subject: .*Unix\ and\ Linux\ Weekly\ Newsletter\ -\ .*
        Stack\ Exchange/Unix\ and\ Linux/
        :0
        * ^Subject: .*User\ Experience\ Weekly\ Newsletter\ -\ .*
        Stack\ Exchange/User\ Experience/
        :0
        * ^Subject: .*Web\ Applications\ Weekly\ Newsletter\ -\ .*
        Stack\ Exchange/Web\ Applications/
        :0
        * ^Subject: .*Webmasters\ Weekly\ Newsletter\ -\ .*
        Stack\ Exchange/Webmasters/
        :0
        * ^Subject: .*The\ Great\ Outdoors\ Weekly\ Newsletter\ -\ .*
        Stack\ Exchange/The\ Great\ Outdoors/
        :0
        * ^Subject: .*Philosophy\ Weekly\ Newsletter\ -\ .*
        Stack\ Exchange/Philosophy/
        :0
        * ^Subject: .*Skeptics\ Weekly\ Newsletter\ -\ .*
        Stack\ Exchange/Skeptics/
        :0
        * ^Subject: .*Cryptography\ Weekly\ Newsletter\ -\ .*
        Stack\ Exchange/Cryptography/
        # :0
        # * ^Subject: .*  Weekly\ Newsletter\ -\ .*
        # Stack\ Exchange/Martial\ Art/
    }
# }}}

# censorship {{{
    :0
    * ^List-ID: .*gfw-blog\.googlegroups\.com
    censorship/
# }}}

# rss2email {{{
:0
* ^User-Agent: rss2email
{
    :0
    * ^X-RSS-Feed: http://feeds.feedburner.com/allthingsrss/hJBr
    ORG-LIST-END-MARKER
    RSS/rss2email/

    :0
    * ^X-RSS-Feed: http://solidot.org.feedsportal.com/c/33236/f/556826/index.rss
    ORG-LIST-END-MARKER
    RSS/Solidot/

}
# }}}

# spam (bogofilter) {{{ spam detect should put at last
    # deliver mail through bogofilter
    :0fw
    | /usr/bin/bogofilter -uep -c ~/.mutt/bogofilter/bogofilter.cf
    # ongoing train bogofilter with -u option.

    :0e
    { EXITCODE=75 HOST }

    #Put mail bogofilter deems as spam in spam folder
    :0:
    * ^X-Bogosity: Spam, tests=bogofilter
    # * ^X-Spam-Flag: YES
    spam/

    #Put mail bogofilter deems as unsure in unsure folder
    :0:
    * ^X-Bogosity: Unsure, tests=bogofilter
    INBOX/
# }}}

# vim:foldmethod=marker:ft=procmail
